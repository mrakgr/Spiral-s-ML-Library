// Do the example from the Cutlass unit tests work?

open corebase
open corecuda
open coreext
open tensorm

inl main() =
    run fun () =>
        // https://github.com/NVIDIA/cutlass/blob/main/media/docs/quickstart.md#launching-a-gemm-kernel-using-cutlass-30-or-newer
        global "#include <cutlass/cutlass.h>"
        global "#include <cutlass/numeric_types.h>"
        global "#include \"cutlass/epilogue/collective/default_epilogue.hpp\""
        global "#include \"cutlass/epilogue/thread/linear_combination.h\""
        global "#include \"cutlass/gemm/collective/collective_builder.hpp\""
        global "#include \"cutlass/gemm/device/gemm_universal_adapter.h\""
        global "#include \"cutlass/gemm/kernel/gemm_universal.hpp\""

        global "#include \"cutlass/util/host_tensor.h\""
        global "#include \"cutlass/util/packed_stride.hpp\""

        global "using namespace cute;"
        // G:\cutlass-3.5.1\test\unit\gemm\device\default_gemm_configuration.hpp
        // TEST(SM50_Device_Gemm_f32n_f32n_f32n_simt_f32, 128x128x64_64x64x64) {
        // using Config = cutlass::gemm::device::DefaultGemmConfigurationToCutlass3Types<
        //     cutlass::arch::OpClassSimt, cutlass::arch::Sm50,
        //     float, cutlass::layout::ColumnMajor,
        //     float, cutlass::layout::ColumnMajor,
        //     float, cutlass::layout::ColumnMajor,
        //     float>;

        // using GemmKernel = cutlass::gemm::kernel::GemmUniversal<
        //     Shape<int,int,int,int>,
        //     Config::CollectiveMainloop,
        //     Config::CollectiveEpilogue
        // >;

        // using Gemm = cutlass::gemm::device::GemmUniversalAdapter<GemmKernel>;
        // EXPECT_TRUE(test::gemm::device::TestAll<Gemm>());
        // }

        $"using Config = cutlass::gemm::device::DefaultGemmConfigurationToCutlass3Types<cutlass::arch::OpClassSimt, cutlass::arch::Sm50, float, cutlass::layout::ColumnMajor, float, cutlass::layout::ColumnMajor, float, cutlass::layout::ColumnMajor, float>"
        $"using GemmKernel = cutlass::gemm::kernel::GemmUniversal<Shape<int,int,int,int>, Config::CollectiveMainloop, Config::CollectiveEpilogue>"

        if rangem.threads_in_grid().from = 0 then
            console.write_ln "hello"
        ()