open corebase
open corecuda
open coreext
open refm
open rangem
open tensorm

open primitives

inl test_reduce() =
    // inl m,n : int * int = (1 <<< 4), (1 <<< 7)
    inl m,n : int * int = (1 <<< 8), (1 <<< 4)
    inl input_identity : _ _ int = cupy.arange{from=0; nearTo=m,n; by=1}
    inl output_identity = tensor_create m
    console.write_ln "The input is:"
    console.tensor.write_ln limit.max input_identity
    run fun _ =>
        // indices (left identity)
        row_reduce (fun config x i j_tns => 
            local_reduce config -1 (fun a b =>
                let return_snd () =
                    assert (a < b) "Expected leftmost argument to be passed first."
                    b
                return_snd()
                ) x
            ) input_identity output_identity

    console.write_ln "The output is:"
    console.tensor.write_ln limit.max output_identity
    ()

inl main() = test_reduce()