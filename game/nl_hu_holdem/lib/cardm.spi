open corebase
open corecuda

prototype suit t : t -> card_t
prototype rank t : t -> card_t
prototype full t : t -> card_t

instance suit card = fun (card x) => x % 4
instance rank card = fun (card x) => x / 4
instance full card = fun (card x) => x

inl from_suit_rank (suit, rank : card_t * card_t) = card (suit ||| (rank * 4))

instance equable card = fun a b => full a = full b
instance comparable card = fun a b => comp (rank a) (rank b)

instance printable card = fun {write write_ln} card =>
    inl rank = 
        match rank card with
        | 12 => 'A'
        | 11 => 'K'
        | 10 => 'Q'
        | 9 => 'J'
        | 8 => 'T'
        | 7 => '9'
        | 6 => '8'
        | 5 => '7'
        | 4 => '6'
        | 3 => '5'
        | 2 => '4'
        | 1 => '3'
        | 0 => '2'
        | _ => '?'

    inl suit =
        match suit card with
        | 3 => 'h'
        | 2 => 's'
        | 1 => 'c'
        | 0 => 'd'
        | _ => '?'

    write rank . write suit