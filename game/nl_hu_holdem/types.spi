open corebase
open corepython
open coreext
open lib
open game

union player_type = Computer | Random | Human | CallingMachine
type player_types = sa 2 player_type

union ui_game_state =
    | GameNotStarted
    | WaitingForActionFromPlayerId : table
    | GameOver : table

union event = 
    // play events
    | StartGame
    | PlayerChanged : player_types
    | ActionSelected : action
    // train events
    | StartTrainingVsSelf
    | StartTrainingVsRando

union ui_effects =
    | AddRewardsRando : plist (plist float)
    | AddRewardsSelf : plist (plist float)

type state_public =
    {
        ui_game_state : ui_game_state
        pl_type : player_types
        messages : messages
    }

type state_private = 
    {
        game : option game_node
        deck : deck
    }

type state_neural =
    {
        model_ptrs : ml.layers.model_ptrs
    }

type state_game = 
    {
        private : state_private
        public : state_public
    }

type state =
    {
        game : state_game
        neural : state_neural
    }

inl init_game() =
    {
        public = {
            ui_game_state = GameNotStarted
            pl_type = arraym.fromList [Computer; Human]
            messages = sa_create
        }
        private = {
            deck = lib.deckm.create()
            game = None
        }
    }

inl init model_ptrs : state = 
    {
        game = init_game()
        neural = {
            model_ptrs
        }
    }