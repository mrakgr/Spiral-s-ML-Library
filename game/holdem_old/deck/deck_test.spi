open corebase
open corecuda

// inl test1() =
//     open inv_arraym
//     open random
//     inl out : inv_array array u8 = create 52
//     inl grid_range () : int = $"gridDim.x * blockDim.x"
//     inl linear_id () : int = $"threadIdx.x + blockIdx.x * blockDim.x"

//     inl blocks = 1
//     inl grids = 1 // divup (length out) blocks
//     run grids blocks (fun () =>
//         globals()
//         inl from = linear_id()
//         $'printf("lid: %d\\n", !from)'
//         inl x : _ philox_state = init {seed=conv from; subsequence=0; offset=0}
//         loop.forBy {from nearTo=length out; by=grid_range()} (fun i deck =>
//             inl () =
//                 inl (deck d) = deck
//                 inl c = intrinsic.popc_u64 d
//                 $'printf("%d\\n", !c)'
//                 ()
//             inl v,deck = draw_card x deck
//             set out i (cardm.full v)
//             deck
//             ) deck_utils.create()
//         |> ignore
//         )
//     inl x = out.arrays
//     $'print(!x.sum())'
//     $'print(cp.arange(0,52).sum())'
//     out

// inl main() = test1()