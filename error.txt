Error trace on line: 36, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options.append('--dopt=on')" // turns on the device optimizations
    ^
Error trace on line: 37, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options.append('--restrict')" // assumes all the pointers are restricted
    ^
Error trace on line: 39, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    match threads_per_block with
    ^
Error trace on line: 45, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl compiler = NVCC
    ^
Error trace on line: 46, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    match compiler with
    ^
Error trace on line: 52, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl kernel_i, vars = join_backend Cuda
    ^
Error trace on line: 53, column: 9 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
        match compiler with
        ^
Error trace on line: 59, column: 9 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
        f () : ()
        ^
Error trace on line: 206, column: 77 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
            run' {shared_mem=model.game_graph() |> ml.models.smem_used} fun () =>
                                                                            ^
Error trace on line: 207, column: 17 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                inl latch = latchm.create_latch_in_block threads_per_block()
                ^
Error trace on line: 208, column: 17 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                inl from = rangem.threads_in_grid().from
                ^
Error trace on line: 209, column: 17 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                if from = 0 then
                ^
Error trace on line: 210, column: 21 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                    inl msg, game_state = deserialize seri.msg, deserialize seri.game_state
                    ^
Error trace on line: 210, column: 25 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                    inl msg, game_state = deserialize seri.msg, deserialize seri.game_state
                        ^
Error trace on line: 212, column: 21 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                    event_loop neural (msg, state_to_internal game_state)
                    ^
Error trace on line: 170, column: 30 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
inl event_loop state_neural (msg, state_internal : event * state_internal) : () =
                             ^
Error trace on line: 172, column: 5 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
    match msg with
    ^
Error trace on line: 173, column: 7 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
    | StartGame =>
      ^
Error trace on line: 174, column: 9 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
        internal_set state_internal init_game()
        ^
Error trace on line: 175, column: 9 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
        play_loop state_neural state_internal game_init()
        ^
Error trace on line: 100, column: 64 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
let play_loop (neural : state_neural) (state : state_internal) node =
                                                               ^
Error trace on line: 101, column: 5 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
    inl push_message = sa_listm.push (refm.to_local state.messages)
    ^
Error trace on line: 102, column: 5 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
    inl pop_deck = 
    ^
Error trace on line: 106, column: 5 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
    inl body node =
    ^
Error trace on line: 168, column: 5 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
    loop.while (function Some => true | None => false) (optionm.bind body) (Some node) |> ignore
    ^
Error trace on line: 18, column: 5 in module: c:\Spiral_s_ML_Library\corebase\loop.spi.
    inl state = _dup state
    ^
Error trace on line: 19, column: 5 in module: c:\Spiral_s_ML_Library\corebase\loop.spi.
    while' (fun () => cond state) fun () => _set state (body state)
    ^
Error trace on line: 2, column: 82 in module: c:\Spiral_s_ML_Library\corebase\loop.spi.
inl while' (cond : () -> bool) (body : () -> ()) : () = !!!!While((join cond()),(body()))
                                                                                 ^
Error trace on line: 19, column: 39 in module: c:\Spiral_s_ML_Library\corebase\loop.spi.
    while' (fun () => cond state) fun () => _set state (body state)
                                      ^
Error trace on line: 19, column: 45 in module: c:\Spiral_s_ML_Library\corebase\loop.spi.
    while' (fun () => cond state) fun () => _set state (body state)
                                            ^
Error trace on line: 19, column: 57 in module: c:\Spiral_s_ML_Library\corebase\loop.spi.
    while' (fun () => cond state) fun () => _set state (body state)
                                                        ^
Error trace on line: 2, column: 16 in module: c:\Spiral_s_ML_Library\corebase\optionm.spi.
inl bind f x = match x with Some a => f a | None => None
               ^
Error trace on line: 2, column: 29 in module: c:\Spiral_s_ML_Library\corebase\optionm.spi.
inl bind f x = match x with Some a => f a | None => None
                            ^
Error trace on line: 2, column: 34 in module: c:\Spiral_s_ML_Library\corebase\optionm.spi.
inl bind f x = match x with Some a => f a | None => None
                                 ^
Error trace on line: 2, column: 39 in module: c:\Spiral_s_ML_Library\corebase\optionm.spi.
inl bind f x = match x with Some a => f a | None => None
                                      ^
Error trace on line: 108, column: 9 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
        match node with
        ^
Error trace on line: 109, column: 11 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
        | TerminalFold table =>
          ^
Error trace on line: 117, column: 11 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
        | TerminalCall table =>
          ^
Error trace on line: 130, column: 11 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
        | Round table => 
          ^
Error trace on line: 130, column: 17 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
        | Round table => 
                ^
Error trace on line: 131, column: 13 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
            match index #state.pl_type table.player_turn with
            ^
Error trace on line: 132, column: 15 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
            | Computer =>
              ^
Error trace on line: 134, column: 17 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                inl model = ml.models.from_model_data model.game_graph() neural.model_data
                ^
Error trace on line: 135, column: 17 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                inl data = table, refm.to_local state.messages
                ^
Error trace on line: 136, column: 17 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                console.write_ln "Running the GPU model."
                ^
Error trace on line: 137, column: 17 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                inl {action sampling_prob_ensemble sampling_prob_selected} = ml.models.run model (Some data)
                ^
Error trace on line: 137, column: 78 in module: c:\Spiral_s_ML_Library\game\leduc\play.spi.
                inl {action sampling_prob_ensemble sampling_prob_selected} = ml.models.run model (Some data)
                                                                             ^
Error trace on line: 13, column: 150 in module: c:\Spiral_s_ML_Library\ml\models.spi.
inl run' forall inp out. (exists t. model : exists t. model t) (exists mid. input : exists mid. (inp -> mid) * pickler.pu mid) (output : int -> out) ~(data : option inp) = join
                                                                                                                                                     ^
Error trace on line: 13, column: 152 in module: c:\Spiral_s_ML_Library\ml\models.spi.
inl run' forall inp out. (exists t. model : exists t. model t) (exists mid. input : exists mid. (inp -> mid) * pickler.pu mid) (output : int -> out) ~(data : option inp) = join
                                                                                                                                                       ^
Error trace on line: 15, column: 5 in module: c:\Spiral_s_ML_Library\ml\models.spi.
    __syncthreads()
    ^
The annotation of the join point does not match its body's type.
Got:      {action : alt_action; sampling_prob_ensemble : tensor i32 f32; sampling_prob_selected : f32}
Expected: {action : tensor (i32 * i32 * i32) f32 * tensor (i32 * i32) i32; sampling_prob_ensemble : tensor i32 f32; sampling_prob_selected : f32}