Error trace on line: 269, column: 9 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
inl main() = test1()
        ^
Error trace on line: 269, column: 14 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
inl main() = test1()
             ^
Error trace on line: 225, column: 10 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
inl test1() =
         ^
Error trace on line: 228, column: 9 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
        inl mask config x i j = j < 3
        ^
Error trace on line: 230, column: 9 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
        inl graph = graph()
        ^
Error trace on line: 231, column: 9 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
        inl model = layers.create_model graph
        ^
Error trace on line: 232, column: 9 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
        layers.param_init model
        ^
Error trace on line: 234, column: 9 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
        run fun () =>
        ^
Error trace on line: 71, column: 13 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
inl run f = run' {shared_mem = 0} f
            ^
Error trace on line: 32, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl blocks_per_grid, threads_per_block = blocks_per_grid(), threads_per_block()
    ^
Error trace on line: 32, column: 9 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl blocks_per_grid, threads_per_block = blocks_per_grid(), threads_per_block()
        ^
Error trace on line: 34, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options = []"
    ^
Error trace on line: 36, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options.append('--dopt=on')" // turns on the device optimizations
    ^
Error trace on line: 37, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options.append('--diag-suppress=550,20012,68,39')" // suppresses some warnings
    ^
Error trace on line: 38, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options.append('--restrict')" // assumes all the pointers are restricted
    ^
Error trace on line: 40, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    match threads_per_block with
    ^
Error trace on line: 46, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl compiler = NVCC
    ^
Error trace on line: 47, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    match compiler with
    ^
Error trace on line: 53, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl kernel_i, vars = join_backend Cuda
    ^
Error trace on line: 54, column: 9 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
        match compiler with
        ^
Error trace on line: 60, column: 9 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
        f () : ()
        ^
Error trace on line: 234, column: 17 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
        run fun () =>
                ^
Error trace on line: 235, column: 13 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            inl sizes = sizes()
            ^
Error trace on line: 236, column: 13 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            inl {model trace} = layers.graph_extract model {}
            ^
Error trace on line: 236, column: 17 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            inl {model trace} = layers.graph_extract model {}
                ^
Error trace on line: 238, column: 13 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            inl thread_id = thread_index()
            ^
Error trace on line: 239, column: 13 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            inl seq_id = ref (0 : int)
            ^
Error trace on line: 241, column: 13 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            inl log_path_prob : _ _ log_path_prob = tensor_create sizes.player_id
            ^
Error trace on line: 242, column: 13 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            loop.linear log_path_prob.dim fun i => tensor_set i {sampling=0; policy=0} log_path_prob
            ^
Error trace on line: 244, column: 13 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            inl push' (world_id, player_id : world_id * player_id) (action_prob, action_id : action_prob * action_id) : () =
            ^
Error trace on line: 258, column: 13 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            let push (world_id, player_id : world_id * player_id) = push' (world_id,player_id) (get_action mask model world_id)
            ^
Error trace on line: 259, column: 13 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            push (235, 0)
            ^
Error trace on line: 258, column: 23 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            let push (world_id, player_id : world_id * player_id) = push' (world_id,player_id) (get_action mask model world_id)
                      ^
Error trace on line: 258, column: 69 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            let push (world_id, player_id : world_id * player_id) = push' (world_id,player_id) (get_action mask model world_id)
                                                                    ^
Error trace on line: 258, column: 97 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
            let push (world_id, player_id : world_id * player_id) = push' (world_id,player_id) (get_action mask model world_id)
                                                                                                ^
Error trace on line: 83, column: 38 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
let get_action mask (model : model) (world_id : world_id) : action_prob * action_id =
                                     ^
Error trace on line: 84, column: 5 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
    open primitives
    ^
Error trace on line: 85, column: 5 in module: c:\Spiral_s_ML_Library\ml\cfr.spi.
    model
    ^
Error trace on line: 57, column: 16 in module: c:\Spiral_s_ML_Library\corebase\core.spi.
inl (|>) a b = b a
               ^
Error trace on line: 280, column: 5 in module: c:\Spiral_s_ML_Library\ml\primitives.spi.
    row_gather_ (fun config x i j_tns => (tensor_create x.dim : _ _ {}), f config x i j_tns) (zip from (tensor_create from.dim))
    ^
Error trace on line: 226, column: 5 in module: c:\Spiral_s_ML_Library\ml\primitives.spi.
    assert (lit_is io.dim) "The tensor dimension needs to be known at compile time." 
    ^
Error trace on line: 131, column: 50 in module: c:\Spiral_s_ML_Library\corebase\core.spi.
inl assert (c : bool) (msg : string) : () = real assert c msg
                                                 ^
Error trace on line: 267, column: 5 in module: c:\Spiral_s_ML_Library\corebase\real_core.spir.
    if c = false then 
    ^
Error trace on line: 268, column: 9 in module: c:\Spiral_s_ML_Library\corebase\real_core.spir.
        if lit_is c && lit_is msg then error_type msg
        ^
Error trace on line: 268, column: 40 in module: c:\Spiral_s_ML_Library\corebase\real_core.spir.
        if lit_is c && lit_is msg then error_type msg
                                       ^
The tensor dimension needs to be known at compile time.