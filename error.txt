Error trace on line: 37, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options.append('--restrict')" // assumes all the pointers are restricted
    ^
Error trace on line: 39, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    match threads_per_block with
    ^
Error trace on line: 45, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl compiler = NVCC
    ^
Error trace on line: 46, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    match compiler with
    ^
Error trace on line: 52, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl kernel_i, vars = join_backend Cuda
    ^
Error trace on line: 53, column: 9 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
        match compiler with
        ^
Error trace on line: 59, column: 9 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
        f () : ()
        ^
Error trace on line: 119, column: 77 in module: c:\Spiral_s_ML_Library\game\leduc\tests\train.spi.
    run' {shared_mem=conv (pass_calculate_dynamic_shared_memory graph)} fun () =>
                                                                            ^
Error trace on line: 122, column: 9 in module: c:\Spiral_s_ML_Library\game\leduc\tests\train.spi.
        inl data : history = arraym.fromList [C2of2 King; C1of2 Call; C1of2 Raise; C1of2 Raise; C1of2 Call; C2of2 Queen; C1of2 Call; C1of2 Raise; C1of2 Raise; C1of2 Call]
        ^
Error trace on line: 124, column: 9 in module: c:\Spiral_s_ML_Library\game\leduc\tests\train.spi.
        ml.game_modelm.run game_model data
        ^
Error trace on line: 14, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl ensemble,block,thread,_ = (key_extract model .output_probs : tensor d4 float).dim
    ^
Error trace on line: 14, column: 9 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl ensemble,block,thread,_ = (key_extract model .output_probs : tensor d4 float).dim
        ^
Error trace on line: 14, column: 18 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl ensemble,block,thread,_ = (key_extract model .output_probs : tensor d4 float).dim
                 ^
Error trace on line: 14, column: 24 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl ensemble,block,thread,_ = (key_extract model .output_probs : tensor d4 float).dim
                       ^
Error trace on line: 15, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl () = // Assert that all the dimensions are right.
    ^
Error trace on line: 15, column: 9 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl () = // Assert that all the dimensions are right.
        ^
Error trace on line: 24, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl ls = create_layer_state()
    ^
Error trace on line: 27, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl x = (key_extract model .input : tensor (int * int * int) float)
    ^
Error trace on line: 28, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    assert (block = fst x.dim) "The first dimension of the input tensor has to equal the number of blocks per grid."
    ^
Error trace on line: 29, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl x = x |> apply block_index()
    ^
Error trace on line: 30, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    assert (thread = fst x.dim) "The second dimension of the input tensor has to equal number threads per block."
    ^
Error trace on line: 33, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl ls = create_layer_state()
    ^
Error trace on line: 36, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    loop.projective threads_in_block(x.dim) fun i =>
    ^
Error trace on line: 39, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    __syncthreads()
    ^
Error trace on line: 42, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl _ =
    ^
Error trace on line: 47, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    __syncthreads()
    ^
Error trace on line: 50, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    loop.linear ensemble fun ensemble =>
    ^
Error trace on line: 53, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    __syncthreads()
    ^
Error trace on line: 56, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl ensemble_id : int = random.int_range {from=0; nearTo=ensemble} ls.rng
    ^
Error trace on line: 59, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl output_probs = (key_extract model .output_probs : tensor d4 float) 
    ^
Error trace on line: 62, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl output_indices =
    ^
Error trace on line: 66, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl () = // Calculate the output indices.
    ^
Error trace on line: 66, column: 9 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl () = // Calculate the output indices.
        ^
Error trace on line: 71, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    inl output_id = tensor_index thread_index() output_indices
    ^
Error trace on line: 72, column: 5 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
    {
    ^
Error trace on line: 90, column: 13 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
            inl x = output_probs |> apply ensemble_id |> apply block
            ^
Error trace on line: 90, column: 21 in module: c:\Spiral_s_ML_Library\ml\game_modelm.spi.
            inl x = output_probs |> apply ensemble_id |> apply block
                    ^
Error trace on line: 57, column: 16 in module: c:\Spiral_s_ML_Library\corebase\core.spi.
inl (|>) a b = b a
               ^
Error trace on line: 102, column: 79 in module: c:\Spiral_s_ML_Library\corebase\tensorm\tensor_main.spi.
inl apply_templ forall dim a b el. (fst : dim -> a) (snd : dim -> b) (i : a) (tensor {bodies dim} : tensor dim el) : tensor b el = real
                                                                              ^
Error trace on line: 102, column: 86 in module: c:\Spiral_s_ML_Library\corebase\tensorm\tensor_main.spi.
inl apply_templ forall dim a b el. (fst : dim -> a) (snd : dim -> b) (i : a) (tensor {bodies dim} : tensor dim el) : tensor b el = real
                                                                                     ^
Error trace on line: 103, column: 5 in module: c:\Spiral_s_ML_Library\corebase\tensorm\tensor_main.spi.
    assert_indices i (fst dim)
    ^
Error trace on line: 126, column: 5 in module: c:\Spiral_s_ML_Library\corebase\struct.spir.
    f (ar, v)
    ^
Error trace on line: 122, column: 17 in module: c:\Spiral_s_ML_Library\corebase\struct.spir.
    inl rec f = function
                ^
Error trace on line: 123, column: 12 in module: c:\Spiral_s_ML_Library\corebase\struct.spir.
        | (a, b), (va,vb) => f (a, va) . f (b, vb)
           ^
Error trace on line: 124, column: 11 in module: c:\Spiral_s_ML_Library\corebase\struct.spir.
        | {} & ar, {} & v => record_iter (fun {key value} => f (ar key, value)) v
          ^
Error trace on line: 125, column: 11 in module: c:\Spiral_s_ML_Library\corebase\struct.spir.
        | ar,v => set ar v
          ^
Error trace on line: 125, column: 19 in module: c:\Spiral_s_ML_Library\corebase\struct.spir.
        | ar,v => set ar v
                  ^
Error trace on line: 5, column: 5 in module: c:\Spiral_s_ML_Library\corebase\tensorm\utils.spir.
    if lit_is i && lit_is s then
    ^
Error trace on line: 6, column: 9 in module: c:\Spiral_s_ML_Library\corebase\tensorm\utils.spir.
        if not (0 <= i && i < s ) then
        ^
Error trace on line: 7, column: 13 in module: c:\Spiral_s_ML_Library\corebase\tensorm\utils.spir.
            error_type "Tensor index out of bounds (detected at compile-time.)"
            ^
Tensor index out of bounds (detected at compile-time.)