Error trace on line: 8, column: 9 in module: c:\Spiral_s_ML_Library\tests\distributed_shared_memory\test0.spi.
inl main() =
        ^
Error trace on line: 9, column: 5 in module: c:\Spiral_s_ML_Library\tests\distributed_shared_memory\test0.spi.
    console.write_ln "Running test 0. How long does the memory transfer take?"
    ^
Error trace on line: 10, column: 5 in module: c:\Spiral_s_ML_Library\tests\distributed_shared_memory\test0.spi.
    run' ClusterDims{cluster_dims={x=16i32; y=1i32; z=1i32}} fun () =>
    ^
Error trace on line: 49, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl blocks_per_grid, threads_per_block = blocks_per_grid(), threads_per_block()
    ^
Error trace on line: 49, column: 9 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl blocks_per_grid, threads_per_block = blocks_per_grid(), threads_per_block()
        ^
Error trace on line: 51, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options = []"
    ^
Error trace on line: 52, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    if debug_mode() = false then global "options.append('--define-macro=NDEBUG')" // turns off the macros
    ^
Error trace on line: 53, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options.append('--dopt=on')" // turns on the device optimizations
    ^
Error trace on line: 54, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options.append('--diag-suppress=550,20012,68,39,177')" // suppresses some warnings
    ^
Error trace on line: 55, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    global "options.append('--restrict')" // assumes all the pointers are restricted
    ^
Error trace on line: 59, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    match threads_per_block with
    ^
Error trace on line: 65, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    assert ($"cp.cuda.Device().attributes['MultiProcessorCount']" = sms_per_gpu()) "The number of SMs per GPU at runtime must much that what is declared atop of corecuda.base. Make sure to use the correct constant so it can be propagated at compile time."
    ^
Error trace on line: 67, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl compiler = NVCC
    ^
Error trace on line: 68, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    match compiler with
    ^
Error trace on line: 74, column: 5 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
    inl kernel_i, vars = join_backend Cuda
    ^
Error trace on line: 75, column: 9 in module: c:\Spiral_s_ML_Library\corecuda\base.spi.
        match compiler with
        ^
The annotation of the join point does not match its body's type.Got: {cluster_dims : {x : i32; y : i32; z : i32}}
Expected: .cluster_dims_or_void