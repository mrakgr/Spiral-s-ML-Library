Error trace on line: 66, column: 5 in module: c:\Spiral_s_ML_Library\ml\cfr_models.spi.
    graph_run_device model ls {ensemble=ensemble_id}
    ^
Error trace on line: 68, column: 5 in module: c:\Spiral_s_ML_Library\ml\cfr_models.spi.
    barrier_cta_sync 0
    ^
Error trace on line: 71, column: 5 in module: c:\Spiral_s_ML_Library\ml\cfr_models.spi.
    inl world_id =
    ^
Error trace on line: 76, column: 5 in module: c:\Spiral_s_ML_Library\ml\cfr_models.spi.
    inl cfr_table = (key_extract model .cfr_table : cfr.table)
    ^
Error trace on line: 76, column: 22 in module: c:\Spiral_s_ML_Library\ml\cfr_models.spi.
    inl cfr_table = (key_extract model .cfr_table : cfr.table)
                     ^
Error trace on line: 321, column: 5 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    assert (snd output.array = snd output.offset) "The sizes of both the pointer storing the data for the graph, and the graph size must be the same."
    ^
Error trace on line: 322, column: 5 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    inl h = hashmapm.create()
    ^
Error trace on line: 351, column: 5 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    match f graph with
    ^
Error trace on line: 351, column: 11 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    match f graph with
          ^
Error trace on line: 66, column: 5 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    match hashmapm.try_get h k with
    ^
Error trace on line: 67, column: 7 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    | Some v => v
      ^
Error trace on line: 68, column: 7 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    | None => inl v = f k in hashmapm.add h k v . v
      ^
Error trace on line: 68, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    | None => inl v = f k in hashmapm.add h k v . v
              ^
Error trace on line: 68, column: 23 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    | None => inl v = f k in hashmapm.add h k v . v
                      ^
Error trace on line: 336, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | BlockMap(exists a. _,a,out) => g (f a) out
              ^
Error trace on line: 337, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | BlockRowMap(exists a. _,a,out) => g (f a) out
              ^
Error trace on line: 338, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | BlockRowReduce(exists a. _,a,out) => g (f a) out
              ^
Error trace on line: 339, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | BlockRowMapReduce(exists a. _,a,out) => g (f a) out
              ^
Error trace on line: 340, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | BlockMatmul(a,b) => pair a b
              ^
Error trace on line: 341, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | Apply(exists a. a,b) => pair a b
              ^
Error trace on line: 342, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | Zip(a,b) => pair a b
              ^
Error trace on line: 343, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | Pair(a,b) => pair a b
              ^
Error trace on line: 343, column: 20 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | Pair(a,b) => pair a b
                   ^
Error trace on line: 343, column: 28 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | Pair(a,b) => pair a b
                           ^
Error trace on line: 331, column: 9 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
        match f a with
        ^
Error trace on line: 332, column: 11 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
        | None => f b
          ^
Error trace on line: 332, column: 19 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
        | None => f b
                  ^
Error trace on line: 66, column: 5 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    match hashmapm.try_get h k with
    ^
Error trace on line: 67, column: 7 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    | Some v => v
      ^
Error trace on line: 68, column: 7 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    | None => inl v = f k in hashmapm.add h k v . v
      ^
Error trace on line: 68, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    | None => inl v = f k in hashmapm.add h k v . v
              ^
Error trace on line: 68, column: 23 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
    | None => inl v = f k in hashmapm.add h k v . v
                      ^
Error trace on line: 336, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | BlockMap(exists a. _,a,out) => g (f a) out
              ^
Error trace on line: 337, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | BlockRowMap(exists a. _,a,out) => g (f a) out
              ^
Error trace on line: 338, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | BlockRowReduce(exists a. _,a,out) => g (f a) out
              ^
Error trace on line: 339, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | BlockRowMapReduce(exists a. _,a,out) => g (f a) out
              ^
Error trace on line: 340, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | BlockMatmul(a,b) => pair a b
              ^
Error trace on line: 341, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | Apply(exists a. a,b) => pair a b
              ^
Error trace on line: 342, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | Zip(a,b) => pair a b
              ^
Error trace on line: 343, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | Pair(a,b) => pair a b
              ^
Error trace on line: 344, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | Weight => None
              ^
Error trace on line: 345, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | Input => None
              ^
Error trace on line: 346, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | KeyScalar => None
              ^
Error trace on line: 347, column: 15 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | KeyGraph((exists key'. _),graph) =>
              ^
Error trace on line: 347, column: 25 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
            | KeyGraph((exists key'. _),graph) =>
                        ^
Error trace on line: 348, column: 17 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
                if (real open real_core in `key `= `key') then // `= operator compares the two types for equality.
                ^
Error trace on line: 349, column: 21 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
                    Some (graph_extract (model {m with graph}) {} |> nominal_recreate)
                    ^
Error trace on line: 349, column: 27 in module: c:\Spiral_s_ML_Library\ml\layers.spi.
                    Some (graph_extract (model {m with graph}) {} |> nominal_recreate)
                          ^
Error trace on line: 57, column: 16 in module: c:\Spiral_s_ML_Library\corebase\core.spi.
inl (|>) a b = b a
               ^
Error trace on line: 151, column: 52 in module: c:\Spiral_s_ML_Library\corebase\core.spi.
inl nominal_recreate forall a b. (x : a): b = real nominal_recreate `b x
                                                   ^
Expected a nominal.
Got: {model : {bodies : {policy : {average : {array : array_base f32 : array f32; offset : 0i32; stride : 16384i32, 4i32, 1i32} : tensor_body (i32 * i32 * i32) f32; current : {array : array_base f32 : array f32; offset : 0i32; stride : 16384i32, 4i32, 1i32} : tensor_body (i32 * i32 * i32) f32; update : {array : array_base f32 : array f32; offset : 0i32; stride : 16384i32, 4i32, 1i32} : tensor_body (i32 * i32 * i32) f32}; value : ({array : array_base f32 : array f32; offset : 0i32; stride : 16384i32, 4i32, 1i32} : tensor_body (i32 * i32 * i32) f32), ({array : array_base f32 : array f32; offset : 0i32; stride : 16384i32, 4i32, 1i32} : tensor_body (i32 * i32 * i32) f32)}; dim : 4i32, 4096i32, 4i32} : tensor (i32 * i32 * i32) {policy : {average : f32; current : f32; update : f32}; value : f32 * f32}; trace : {actions : {bodies : {action_id : {array : array_base i32 : array i32; offset : 0i32; stride : 512i32, 32i32, 1i32} : tensor_body (i32 * i32 * i32) i32; action_sampling_prob : {array : array_base f32 : array f32; offset : 0i32; stride : 512i32, 32i32, 1i32} : tensor_body (i32 * i32 * i32) f32; player_id : {array : array_base i32 : array i32; offset : 0i32; stride : 512i32, 32i32, 1i32} : tensor_body (i32 * i32 * i32) i32; world_id : {array : array_base i32 : array i32; offset : 0i32; stride : 512i32, 32i32, 1i32} : tensor_body (i32 * i32 * i32) i32}; dim : 4i32, 16i32, 32i32} : tensor (i32 * i32 * i32) {action_id : i32; action_sampling_prob : f32; player_id : i32; world_id : i32}; log_path_probs : {bodies : {policy : {array : array_base f64 : array f64; offset : 0i32; stride : 1024i32, 64i32, 2i32, 1i32} : tensor_body (i32 * i32 * i32 * i32) f64; sampling : {array : array_base f64 : array f64; offset : 0i32; stride : 1024i32, 64i32, 2i32, 1i32} : tensor_body (i32 * i32 * i32 * i32) f64}; dim : 4i32, 16i32, 32i32, 2i32} : tensor (i32 * i32 * i32 * i32) {policy : f64; sampling : f64}; update : {policy : {bodies : {array : array_base f32 : array f32; offset : 0i32; stride : 2048i32, 128i32, 4i32, 1i32} : tensor_body (i32 * i32 * i32 * i32) f32; dim : 4i32, 16i32, 32i32, 4i32} : tensor (i32 * i32 * i32 * i32) f32; value : {bodies : ({array : array_base f32 : array f32; offset : 0i32; stride : 512i32, 32i32, 1i32} : tensor_body (i32 * i32 * i32) f32), ({array : array_base f32 : array f32; offset : 0i32; stride : 512i32, 32i32, 1i32} : tensor_body (i32 * i32 * i32) f32); dim : 4i32, 16i32, 32i32} : tensor (i32 * i32 * i32) (f32 * f32)}}}