{game_state : {large : {deck : u64 : deck; messages : backend_switch {Cuda : static_array_list<message,128i32,i32>; Python : static_array_list} : sa_list 128i32 message}; small : {game : {None : () | Some : game_node} : option game_node; pl_type : backend_switch {Cuda : static_array<player_type,2i32>; Python : static_array} : sa 2i32 player_type; ui_game_state : {GameNotStarted : () | GameOver : {min_raise : i32; pl_card : sa 2i32 (sa 2i32 card); pot : sa 2i32 i32; round_turn : i32; stack : sa 2i32 i32; street : street} | WaitingForActionFromPlayerId : {min_raise : i32; pl_card : sa 2i32 (sa 2i32 card); pot : sa 2i32 i32; round_turn : i32; stack : sa 2i32 i32; street : street}} : ui_game_state}}}
{large : {deck : u64 : deck; messages : backend_switch {Cuda : static_array_list<message,128i32,i32>; Python : static_array_list} : sa_list 128i32 message}; small : {game : {None : () | Some : game_node} : option game_node; pl_type : backend_switch {Cuda : static_array<player_type,2i32>; Python : static_array} : sa 2i32 player_type; ui_game_state : {GameNotStarted : () | GameOver : {min_raise : i32; pl_card : sa 2i32 (sa 2i32 card); pot : sa 2i32 i32; round_turn : i32; stack : sa 2i32 i32; street : street} | WaitingForActionFromPlayerId : {min_raise : i32; pl_card : sa 2i32 (sa 2i32 card); pot : sa 2i32 i32; round_turn : i32; stack : sa 2i32 i32; street : street}} : ui_game_state}}
{deck : u64 : deck; messages : backend_switch {Cuda : static_array_list<message,128i32,i32>; Python : static_array_list} : sa_list 128i32 message}
u64 : deck
u64
backend_switch {Cuda : static_array_list<message,128i32,i32>; Python : static_array_list} : sa_list 128i32 message
{CommunityCardsAre : sa_list 5i32 card | Fold : {chips_won : i32; winner_id : i32} | PlayerAction : i32 * action | PlayerGotCards : i32 * sa 2i32 card | Showdown : {chips_won : i32; hands_shown : sa 2i32 hand_score; winner_id : i32}} : message
backend_switch {Cuda : static_array_list<card,5i32,i32>; Python : static_array_list} : sa_list 5i32 card
u8 : card
u8
{chips_won : i32; winner_id : i32}
i32
i32, ({A_All_In : () | A_Call : () | A_Fold : () | A_Raise : i32} : action)
{A_All_In : () | A_Call : () | A_Fold : () | A_Raise : i32} : action
()
i32, (backend_switch {Cuda : static_array<card,2i32>; Python : static_array} : sa 2i32 card)
backend_switch {Cuda : static_array<card,2i32>; Python : static_array} : sa 2i32 card
{chips_won : i32; hands_shown : backend_switch {Cuda : static_array<hand_score,2i32>; Python : static_array} : sa 2i32 hand_score; winner_id : i32}
backend_switch {Cuda : static_array<hand_score,2i32>; Python : static_array} : sa 2i32 hand_score
{hand : backend_switch {Cuda : static_array<card,5i32>; Python : static_array} : sa 5i32 card; score : i8} : hand_score
{hand : backend_switch {Cuda : static_array<card,5i32>; Python : static_array} : sa 5i32 card; score : i8}
backend_switch {Cuda : static_array<card,5i32>; Python : static_array} : sa 5i32 card
Stack overflow.
Repeat 8 times:
--------------------------------
   at Spiral.PartEval.Main.term@732-66(TopEnv, System.Collections.Generic.Dictionary`2<System.Tuple`2<ConsedNode`1<System.String>,E>,System.Tuple`2<System.Collections.Generic.Dictionary`2<ConsedNode`1<System.Tuple`2<RData[],Ty[]>>,System.Tuple`3<Microsoft.FSharp.Core.FSharpOption`1<TypedBind[]>,Microsoft.FSharp.Core.FSharpOption`1<Ty>,Microsoft.FSharp.Core.FSharpOption`1<System.String>>>,HashConsTable>>, System.Collections.Generic.Dictionary`2<System.Tuple`2<ConsedNode`1<System.String>,E>,System.Tuple`2<System.Collections.Generic.Dictionary`2<ConsedNode`1<System.Tuple`3<RData[],Ty[],Ty>>,Microsoft.FSharp.Core.FSharpOption`1<System.Tuple`2<Data,TypedBind[]>>>,HashConsTable>>, System.Collections.Generic.Dictionary`2<T,System.Tuple`2<System.Collections.Generic.Dictionary`2<ConsedNode`1<Ty[]>,Microsoft.FSharp.Core.FSharpOption`1<Ty>>,HashConsTable>>, HashConsTable, LangEnv, E)
--------------------------------